name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Bandit Security Scanner
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json
    - name: Run Safety Check
      run: |
        pip install safety
        safety check --json --output safety-report.json

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    - name: Run tests
      run: |
        pytest tests/ --cov=src/ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  dvc-pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
    - name: Run DVC pipeline
      run: |
        dvc repro --dry
        
  build-and-deploy:
    needs: [security-scan, test, dvc-pipeline]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker image
      run: |
        docker build -t cyber-llm:latest -f src/deployment/docker/Dockerfile .
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # kubectl apply -f src/deployment/k8s/staging/
